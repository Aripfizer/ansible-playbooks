- name: Monitoré un repertoire 
  hosts: virtualmachines
  tasks:
   - name: Vérifier que le répertoire existe
     stat:
       path: "{{ target_directory }}"
     register: stat_directory

   - name: Afficher un message d'erreur si le répertoire n'existe pas
     fail:
       msg: "Le répertoire {{ target_directory }} n'existe pas"
     when: not stat_directory.stat.exists

   - name: Trouver les fichiers créés dans les 2 dernières minutes
     find:
       paths: "{{ target_directory }}"
       patterns: "{{ file_pattern }}"
       age: "-{{ intervalle_seconds }}s"
       recurse: yes
     register: recent_files

   - name: Vérifier le nombre de fichiers trouvés
     set_fact:
       nb_fichiers: "{{ recent_files.files | length }}"
   
   - name: Afficher les infos des fichiers si > 0
     debug:
       msg: 
         - "Fichier trouvé : {{ item.path }}"
         - "Nom : {{ item.path | basename }}"
         - "Taille : {{ (item.size/1024/1024) | round(2) }} Mo"
         - "Date création : {{ '%d/%m/%Y - %H:%M:%S' | strftime(item.mtime) }}"
     loop: "{{ recent_files.files }}"
     when: nb_fichiers|int > 0

   - name: Récupérer les fichiers conformément au pattern
     find:
       paths: "{{ target_directory }}"
       patterns: "{{ file_pattern }}"
     register: found_files
     when: nb_fichiers|int == 0

   - name: Trier les fichiers par date de modification
     set_fact:
       sorted_files: "{{ found_files.files|sort(attribute='mtime') }}"
     when: nb_fichiers|int == 0
   
   - name: Récupérer le dernier fichier
     set_fact:
       last_added_file: "{{ sorted_files|last }}"
     when: nb_fichiers|int == 0

   - name: Extraire les infos du dernier fichier dans des variables 
     set_fact:
       last_file_path: "{{ last_added_file.path }}"
       last_file_name: "{{ last_added_file.path | basename }}"
       last_file_date: "{{ '%d/%m/%Y - %H:%M:%S' | strftime(last_added_file.mtime) }}"
       last_file_size: "{{ (last_added_file.size/1024/1024) | round(2) }}"
     when: nb_fichiers|int == 0
   
   - name: Envoyer un email si aucun fichier
     mail:
       host: "{{host}}"
       port: "{{port}}"
       username: "{{username}}"
       password: "{{password}}"
       from: admin@ansible.bj (Ansible Support)
       to: "{{  email_to }}"
       cc: "{{ email_cc }}"
       subject: "Monitoring"
       body: "{{ lookup('template','templates/email.html.j2') }}"
       subtype: html
       charset: utf8
     when: nb_fichiers|int == 0  
